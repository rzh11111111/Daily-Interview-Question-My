1.Set（集合）
成员唯一、无序且不重复
[value, value]，键值与键名是一致的（或者说只有键值，没有键名）
可以遍历，方法有：add、delete、has,clear()

    const s = new Set()
    [1, 2, 3, 4, 3, 2, 1].forEach(x => s.add(x))

    for (let i of s) {
        console.log(i)	// 1 2 3 4
    }

    // 去重数组的重复对象
    let arr = [1, 2, 3, 2, 1, 1]
    [... new Set(arr)]	// [1, 2, 3]


2.WeakSet
成员都是对象
成员都是弱引用，可以被垃圾回收机制回收，可以用来保存DOM节点，不容易造成内存泄漏
不能遍历，方法有add、delete、has

3.Map(字典)
集合 是以 [value, value]的形式储存元素，字典 是以 [key, value] 的形式储存
本质上是键值对的集合，类似集合
可以遍历，方法很多可以跟各种数据格式转换

const m = new Map()
const o = {p: 'haha'}
m.set(o, 'content')
m.get(o)	// content

m.has(o)	// true
m.delete(o)	// true
m.has(o)	// false

4.WeakMap
只接受对象作为键名（null除外），不接受其他类型的值作为键名
键名是弱引用，键值可以是任意的，键名所指向的对象可以被垃圾回收，此时键名是无效的
不能遍历，方法有get、set、has、delete